### اسنپ‌شات جامع پروژه Ma2tA

#### 1. بک‌اند (Backend)
##### فریم‌ورک‌ها و ابزارها:
- **Django:** فریم‌ورک اصلی برای ساخت بک‌اند.
- **Django REST Framework:** برای ایجاد APIهای RESTful.
- **PostgreSQL:** دیتابیس اصلی برای ذخیره‌سازی داده‌ها.
- **Celery:** برای مدیریت وظایف پس‌زمینه.
- **Redis:** برای مدیریت صف‌ها و کش‌کردن داده‌ها.

##### مراحل راه‌اندازی:
1. **نصب و راه‌اندازی Django:**
   ```bash
   sudo apt update
   sudo apt install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx curl
   pip install virtualenv
   mkdir ~/Ma2tA && cd ~/Ma2tA
   virtualenv ma2taenv
   source ma2taenv/bin/activate
   pip install django psycopg2-binary djangorestframework celery redis
   django-admin startproject ma2ta .
   ```

2. **تنظیمات دیتابیس PostgreSQL:**
   ```bash
   sudo -u postgres psql
   CREATE DATABASE ma2tadb;
   CREATE USER ma2tauser WITH PASSWORD 'password';
   ALTER ROLE ma2tauser SET client_encoding TO 'utf8';
   ALTER ROLE ma2tauser SET default_transaction_isolation TO 'read committed';
   ALTER ROLE ma2tauser SET timezone TO 'UTC';
   GRANT ALL PRIVILEGES ON DATABASE ma2tadb TO ma2tauser;
   \q
   ```

3. **تنظیمات پروژه Django:**
   ویرایش فایل `settings.py` برای تنظیمات دیتابیس و سایر تنظیمات مورد نیاز.

```python name=settings.py
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'ma2tadb',
        'USER': 'ma2tauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '',
    }
}
```

4. **ایجاد مدل‌های دیتابیس:**
```python name=shop/models.py
from django.db import models

class Category(models.Model):
    name = models.CharField(max_length=200)
    description = models.TextField()

    def __str__(self):
        return self.name

class Product(models.Model):
    category = models.ForeignKey(Category, related_name='products', on_delete=models.CASCADE)
    name = models.CharField(max_length=200)
    description = models.TextField()
    price = models.DecimalField(max_digits=10, decimal_places=2)
    stock = models.IntegerField()
    available = models.BooleanField(default=True)
    created = models.DateTimeField(auto_now_add=True)
    updated = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name
```

5. **ایجاد ویوها و URLها:**
```python name=shop/views.py
from django.shortcuts import render, get_object_or_404
from .models import Category, Product

def product_list(request, category_slug=None):
    category = None
    categories = Category.objects.all()
    products = Product.objects.filter(available=True)
    if category_slug:
        category = get_object_or_404(Category, slug=category_slug)
        products = products.filter(category=category)
    return render(request, 'shop/product/list.html', {'category': category, 'categories': categories, 'products': products})

def product_detail(request, id, slug):
    product = get_object_or_404(Product, id=id, slug=slug, available=True)
    return render(request, 'shop/product/detail.html', {'product': product})
```

```python name=shop/urls.py
from django.urls import path
from . import views

app_name = 'shop'

urlpatterns = [
    path('', views.product_list, name='product_list'),
    path('<slug:category_slug>/', views.product_list, name='product_list_by_category'),
    path('<int:id>/<slug:slug>/', views.product_detail, name='product_detail'),
]
```

```python name=urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('shop/', include('shop.urls', namespace='shop')),
]
```

#### 2. فرانت‌اند (Frontend)
##### فریم‌ورک‌ها و ابزارها:
- **React.js:** برای ساخت رابط کاربری.
- **Redux:** برای مدیریت وضعیت برنامه.
- **Axios:** برای ارتباط با APIهای بک‌اند.
- **Webpack:** برای بسته‌بندی و مدیریت دارایی‌ها.

##### مراحل راه‌اندازی:
1. **نصب Node.js و npm:**
   ```bash
   curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
   sudo apt install -y nodejs
   ```

2. **ایجاد پروژه React:**
   ```bash
   npx create-react-app ma2ta-frontend
   cd ma2ta-frontend
   npm install redux react-redux axios
   ```

3. **ساخت کامپوننت‌های React و اتصال به APIهای Django:**
```javascript name=src/components/ProductList.js
import React, { useEffect, useState } from 'react';
import axios from 'axios';

const ProductList = () => {
    const [products, setProducts] = useState([]);

    useEffect(() => {
        axios.get('/api/products/')
            .then(response => {
                setProducts(response.data);
            })
            .catch(error => {
                console.error('There was an error fetching the products!', error);
            });
    }, []);

    return (
        <div>
            <h1>Product List</h1>
            <ul>
                {products.map(product => (
                    <li key={product.id}>{product.name}</li>
                ))}
            </ul>
        </div>
    );
};

export default ProductList;
```

```javascript name=src/index.js
import React from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux';
import { createStore } from 'redux';
import rootReducer from './reducers';
import App from './App';

const store = createStore(rootReducer);

ReactDOM.render(
    <Provider store={store}>
        <App />
    </Provider>,
    document.getElementById('root')
);
```

#### 3. اپلیکیشن موبایل
##### فریم‌ورک‌ها و ابزارها:
- **React Native:** برای ساخت اپلیکیشن‌های موبایل چندسکویی.
- **Redux:** برای مدیریت وضعیت برنامه.
- **Axios:** برای ارتباط با APIهای بک‌اند.

##### مراحل راه‌اندازی:
1. **نصب React Native CLI:**
   ```bash
   npm install -g react-native-cli
   ```

2. **ایجاد پروژه React Native:**
   ```bash
   react-native init Ma2tAApp
   cd Ma2tAApp
   npm install redux react-redux axios
   ```

3. **ساخت کامپوننت‌های مورد نیاز و اتصال به APIهای Django:**
```javascript name=App.js
import React from 'react';
import { Provider } from 'react-redux';
import { createStore } from 'redux';
import rootReducer from './reducers';
import ProductsScreen from './screens/ProductsScreen';

const store = createStore(rootReducer);

const App = () => {
    return (
        <Provider store={store}>
            <ProductsScreen />
        </Provider>
    );
};

export default App;
```

```javascript name=screens/ProductsScreen.js
import React, { useEffect, useState } from 'react';
import { View, Text, FlatList } from 'react-native';
import axios from 'axios';

const ProductsScreen = () => {
    const [products, setProducts] = useState([]);

    useEffect(() => {
        axios.get('http://your-api-url/api/products/')
            .then(response => {
                setProducts(response.data);
            })
            .catch(error => {
                console.error('There was an error fetching the products!', error);
            });
    }, []);

    return (
        <View>
            <Text>Product List</Text>
            <FlatList
                data={products}
                keyExtractor={item => item.id.toString()}
                renderItem={({ item }) => (
                    <View>
                        <Text>{item.name}</Text>
                    </View>
                )}
            />
        </View>
    );
};

export default ProductsScreen;
```

#### 4. راه‌اندازی و استقرار روی لینوکس اوبونتو
##### مراحل راه‌اندازی و استقرار:
1. **نصب Nginx و Gunicorn:**
   ```bash
   sudo apt install nginx
   pip install gunicorn
   ```

2. **پیکربندی Nginx:**
   ایجاد فایل تنظیمات Nginx برای پروژه و فعال‌سازی آن.

```nginx name=/etc/nginx/sites-available/ma2ta
server {
    listen 80;
    server_name your_domain;

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/ {
        alias /home/your_user/Ma2tA/static/;
    }

    location /media/ {
        alias /home/your_user/Ma2tA/media/;
    }
}
```

3. **اجرای Gunicorn:**
   اجرای Gunicorn برای مدیریت درخواست‌ها:
   ```bash
   gunicorn --workers 3 ma2ta.wsgi:application
   ```

4. **تنظیمات امنیتی و بهینه‌سازی:**
   پیکربندی فایروال، SSL و سایر تنظیمات امنیتی برای سرور.

با استفاده از این اسنپ‌شات جامع، شما می‌توانید یک وبسایت فروشگاهی و اپلیکیشن موبایل قوی و کارآمد ایجاد کنید که قابلیت‌های مختلفی مانند مدیریت محصولات، دسته‌بندی‌ها، سبد خرید، پرداخت آنلاین و پیگیری سفارشات را فراهم می‌کند.